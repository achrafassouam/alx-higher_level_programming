The ``0. Integers addition`` Task
=================================

	>>> add_integer = __import__("0-add_integer").add_integer

Making sure the document and the function exists:

	>>> doc = __import__("0-add_integer").__doc__
	>>> print(len(doc) > 0)
	True

	>>> func = __import__("0-add_integer").add_integer.__doc__
	>>> print(len(func) > 0)
	True

Usage & correct output :

	>>> print(add_integer(1, 1))
	2

	>>> print(add_integer(0, 1))
	1

	>>> print(add_integer(1, 0))
	1

	>>> print(add_integer(-50, 50))
	0

	>>> print(add_integer(-50, -50))
	-100

	>>> print(add_integer(0.5, 9.5))
	9

	>>> print(add_integer(100, 50.5))
	150

	>>> print(add_integer(10, 9**2))
	91

Erros :

	>>> print(add_integer(None, 5))
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> print(add_integer(10, "ab"))
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> print(add_integer((1, 2), 5))
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> print(add_integer("Alx", "School"))
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> print(add_integer())
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> print(add_integer(1, None))
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(float('nan'))
    	Traceback (most recent call last):
    	ValueError: cannot convert float NaN to integer
	
	>>> add_integer(float("Alx"))
    	Traceback (most recent call last):
	ValueError: could not convert string to float: 'Alx'

	>>> add_integer(1e500, 2e500)
    	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer
