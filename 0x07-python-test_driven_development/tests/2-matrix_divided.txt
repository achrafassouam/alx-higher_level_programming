The ``1. Divide a matrix`` Task:
================================

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Check if document and functions exists :
	>>> module = __import__("2-matrix_divided").__doc__
	>>> print(len(module) > 0)
	True

	>>> func = __import__("2-matrix_divided").matrix_divided.__doc__
	>>> print(len(func) > 0)
	True

Correct Usage:

	>>> matrix = [[4, 6, 8], [2, 2, 1]]
	>>> print(matrix_divided(matrix, 2))
	[[2.0, 3.0, 4.0], [1.0, 1.0, 0.5]]

	>>> print(matrix_divided(matrix, 2.5))
	[[1.6, 2.4, 3.2], [0.8, 0.8, 0.4]]

	>>> print(matrix_divided(matrix, -1))
	[[-4.0, -6.0, -8.0], [-2.0, -2.0, -1.0]]

	>>> print(matrix_divided(matrix, float('inf')))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Errors:

	>>> print(matrix_divided(matrix, "alx"))
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> print(matrix_divided())
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> print(matrix_divided(matrix))
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix = [[1, 2], [3, 4, 5]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size
